name: Build and Deploy to App Engine

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  PROJECT_ID: team15-microservice-catalog
  GAE_INSTANCE: team15-microservice-catalog
  GAE_SERVICE: default

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.24'

    - name: Install backend dependencies
      run: |
        cd backend
        go mod download

    - name: Build backend
      run: |
        cd backend
        go build ./cmd/server

  deploy:
    name: Deploy to App Engine
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Cloud SDK
      uses: google-github-actions/setup-gcloud@v2
      with:
        project_id: ${{ env.PROJECT_ID }}
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        export_default_credentials: true

    - name: Deploy to App Engine
      run: |
        gcloud app deploy app.yaml \
          --project=${{ env.PROJECT_ID }} \
          --version=v${{ github.run_number }} \
          --promote \
          --quiet

    - name: Test deployment
      run: |
        # Wait for deployment to be ready
        sleep 30
        
        # Test login endpoint
        curl -f -X POST https://${{ env.GAE_INSTANCE }}.uw.r.appspot.com/login \
          -H "Content-Type: application/json" \
          -d '{"username":"admin","password":"secret"}' || exit 1
        
        echo "‚úÖ Backend API is responding correctly!"

    - name: Notify on success
      if: success()
      run: |
        echo "‚úÖ Deployment successful!"
        echo "üåê Application URL: https://${{ env.GAE_INSTANCE }}.uw.r.appspot.com"

    - name: Notify on failure
      if: failure()
      run: |
        echo "‚ùå Deployment failed!"
        exit 1
